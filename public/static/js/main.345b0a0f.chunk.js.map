{"version":3,"sources":["actions/actions.js","reducers/reducer.js","store/store.js","components/entries.jsx","components/login.jsx","components/navbar.jsx","components/logout.jsx","components/register.jsx","App.js","serviceWorker.js","index.js","scroll.png"],"names":["addToken","token","type","addLoginError","loginError","initialState","handleState","state","action","store","createStore","Entries","props","useState","entryItems","setEntryItems","highestRated","setHighestRated","numberEntries","setNumberEntries","user","setUser","itemCategories","setItemCategories","loading","setLoading","show","setShow","newEntrySuccess","setNewEntrySuccess","newEntryFailure","setNewEntryFailure","starRating","setStarRating","item","name","itemCategory","points","userId","rating","formValue","setFormValue","handleFormValidation","nameValid","trim","length","ratingValid","filter","categoryValid","rateEntry","starIndex","newStarRating","forEach","star","index","handleStarColor","handleFormChange","e","target","value","newEntry","find","category","_id","JSON","parse","handleClose","handleSubmit","a","dataToSend","fetch","method","headers","Accept","body","stringify","setTimeout","console","log","getUserEntries","handleShow","sessionStorage","getItem","handleLoggedOutUser","to","handleIcon","categoryName","displayRating","starRatingArray","i","push","key","className","icon","deleteEntry","id","window","confirm","err","entriesResponse","json","entriesData","entries","entry","year","Date","getFullYear","toString","sort","b","parseFloat","Table","striped","hover","responsive","date","map","onClick","reverse","useEffect","getEntries","getUser","userResponse","userData","getItemCategories","itemCategoryResponse","getData","Spinner","as","animation","style","width","height","role","aria-hidden","Fragment","Modal","onHide","Header","closeButton","Title","Body","Form","Group","controlId","Label","Control","placeholder","onChange","disabled","Text","Footer","Button","variant","Login","setName","password","setPassword","setLoginError","loginErrorMessage","useSelector","handleLogin","loginResponse","res","dispatch","setItem","history","onSubmit","event","preventDefault","htmlFor","aria-describedby","NavbarComponent","getState","setToken","Navbar","bg","expand","Brand","href","Image","marginRight","src","logo","rounded","Toggle","aria-controls","Collapse","Nav","Link","Logout","handleLogout","axios","get","removeItem","logout","Register","retypePassword","form","setForm","registerFailure","setRegisterFailure","handleRegisterFormChange","post","then","data","catch","error","handleRegister","response","message","iconList","Object","keys","Icons","library","add","App","exact","path","component","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.345b0a0f.chunk.js","sourcesContent":["export const ADD_TOKEN = \"ADD_TOKEN\";\nexport const ADD_LOGIN_ERROR = \"ADD_LOGIN_ERROR\"\n\nexport const addToken = (token) => {\n    return {\n        type: ADD_TOKEN, token\n    }\n}\n\nexport const addLoginError = (loginError) => {\n    return {\n        type: ADD_LOGIN_ERROR, loginError\n    }\n}\n","import { ADD_TOKEN, ADD_LOGIN_ERROR } from \"../actions/actions\"\n\nconst initialState = {\n    token: null,\n    loginError: false\n}\n\nconst handleState = (state = initialState, action) => {\n    switch (action.type) {\n        case ADD_TOKEN:\n            return { ...state, token: action.token }\n        case ADD_LOGIN_ERROR:\n            return { ...state, loginError: action.loginError }\n        default:\n            return state\n    }\n}\n\nexport default handleState","import { createStore } from 'redux'\nimport handleState from '../reducers/reducer'\n\nconst store = createStore(handleState)\nexport default store\n","import React, { useState, useEffect } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { Table, Spinner, Modal, Button, Form } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nexport const Entries = (props) => {\n  const [entryItems, setEntryItems] = useState([]);\n  const [highestRated, setHighestRated] = useState('');\n  const [numberEntries, setNumberEntries] = useState(0);\n  const [user, setUser] = useState({});\n  const [itemCategories, setItemCategories] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [show, setShow] = useState(false);\n  const [newEntrySuccess, setNewEntrySuccess] = useState(false);\n  const [newEntryFailure, setNewEntryFailure] = useState(false);\n  const [starRating, setStarRating] = useState([\n    false,\n    false,\n    false,\n    false,\n    false,\n  ]);\n  const [formValue, setFormValue] = useState({\n    item: {\n      name: '',\n      itemCategory: { name: '', points: 0 },\n    },\n    user: { userId: '' },\n    rating: 0,\n  });\n\n  const handleFormValidation = () => {\n    const nameValid = formValue?.item?.name?.trim()?.length > 0;\n    const ratingValid =\n      starRating.filter((rating) => rating === true).length > 0;\n    const categoryValid =\n      formValue?.item?.itemCategory?.name?.trim()?.length > 0 &&\n      formValue?.item?.itemCategory?.points > 0;\n    return nameValid && categoryValid && ratingValid;\n  };\n\n  const showNewEntrySuccessMessage = () => {\n    return newEntrySuccess ? (\n      <span className=\"text-success\">\n        <br></br>New entry logged successfully.\n      </span>\n    ) : null;\n  };\n\n  const showNewEntryFailureMessage = () => {\n    return newEntryFailure ? (\n      <span className=\"text-danger\">\n        <br></br>New entry attempt failed, please try again.\n      </span>\n    ) : null;\n  };\n\n  const rateEntry = (starIndex) => {\n    const newStarRating = [false, false, false, false, false];\n    newStarRating.forEach((star, index) => {\n      newStarRating[index] = index <= starIndex ? true : false;\n    });\n    return setStarRating(newStarRating);\n  };\n\n  const handleStarColor = (starIndex) => {\n    return starRating[starIndex] ? 'rating-star checked-star' : 'rating-star';\n  };\n\n  const handleFormChange = (e) => {\n    let { name, value } = e.target;\n    let newEntry = { ...formValue };\n    if (name === 'itemCategory') {\n      newEntry.item.itemCategory = itemCategories.find(\n        (category) => category._id === JSON.parse(value)._id\n      );\n    } else if (name === 'name') {\n      newEntry.item.name = value;\n    }\n    setFormValue({ ...formValue, ...newEntry });\n  };\n\n  const handleClose = () => {\n    setShow(false);\n    setStarRating([false, false, false, false, false]);\n    setFormValue({\n      item: {\n        name: '',\n        itemCategory: { name: '', points: 0 },\n      },\n      user: { userId: '' },\n      rating: 0,\n    });\n  };\n\n  const handleSubmit = async () => {\n    const dataToSend = {\n      item: {\n        name: formValue.item.name,\n        itemCategory: {\n          name: formValue.item.itemCategory.name,\n          points: formValue.item.itemCategory.points,\n        },\n      },\n      rating: starRating.filter((star) => star === true).length,\n    };\n    try {\n      await fetch(`/api/entries`, {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json',\n          token,\n        },\n        body: JSON.stringify(dataToSend),\n      });\n      setNewEntrySuccess(true);\n      setTimeout(() => setNewEntrySuccess(false), 10000);\n    } catch (err) {\n      console.log(err);\n      setNewEntryFailure(true);\n      setTimeout(() => setNewEntryFailure(false), 10000);\n    }\n\n    handleClose();\n    getUserEntries();\n  };\n\n  const handleShow = () => setShow(true);\n\n  const token = sessionStorage.getItem('token');\n\n  const handleLoggedOutUser = () => {\n    const token = sessionStorage.getItem('token');\n    return token && token !== 'undefined' ? null : <Redirect to=\"/login\" />;\n  };\n\n  const handleIcon = (categoryName) => {\n    switch (categoryName) {\n      case 'Manga Volume':\n        return 'atlas';\n      case 'Book':\n        return 'book';\n      case 'Film':\n        return 'film';\n      case 'Video Game':\n        return 'gamepad';\n      case 'Sport':\n        return 'trophy';\n      case 'TV Show':\n        return 'tv';\n      default:\n        return null;\n    }\n  };\n\n  const newEntryModal = () => {\n    return (\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Log A New Entry!</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form>\n            <Form.Group controlId=\"itemName\">\n              <Form.Label>Name *</Form.Label>\n              <Form.Control\n                name=\"name\"\n                value={formValue.item.name}\n                type=\"text\"\n                placeholder=\"Enter a name for your entry\"\n                onChange={handleFormChange}\n              />\n            </Form.Group>\n\n            <Form.Group controlId=\"itemCategory\">\n              <Form.Label>Category *</Form.Label>\n              <Form.Control\n                name=\"itemCategory\"\n                as=\"select\"\n                onChange={handleFormChange}\n                value={JSON.stringify(formValue.item.itemCategory)}\n              >\n                <option\n                  value={JSON.stringify({ name: '', points: 0 })}\n                  disabled\n                >\n                  Please select a category for your entry\n                </option>\n                {itemCategories\n                  ? itemCategories.map((itemCategory) => {\n                      return (\n                        <option\n                          key={itemCategory._id}\n                          value={JSON.stringify(itemCategory)}\n                        >\n                          {itemCategory.name}\n                        </option>\n                      );\n                    })\n                  : handleLoggedOutUser()}\n              </Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId=\"rating\">\n              <Form.Label>Rating *</Form.Label>\n              <br />\n              <FontAwesomeIcon\n                onClick={() => rateEntry(0)}\n                className={handleStarColor(0)}\n                icon=\"star\"\n              ></FontAwesomeIcon>\n              <FontAwesomeIcon\n                onClick={() => rateEntry(1)}\n                className={handleStarColor(1)}\n                icon=\"star\"\n              ></FontAwesomeIcon>\n              <FontAwesomeIcon\n                onClick={() => rateEntry(2)}\n                className={handleStarColor(2)}\n                icon=\"star\"\n              ></FontAwesomeIcon>\n              <FontAwesomeIcon\n                onClick={() => rateEntry(3)}\n                className={handleStarColor(3)}\n                icon=\"star\"\n              ></FontAwesomeIcon>\n              <FontAwesomeIcon\n                onClick={() => rateEntry(4)}\n                className={handleStarColor(4)}\n                icon=\"star\"\n              ></FontAwesomeIcon>\n            </Form.Group>\n            <Form.Text className=\"text-muted\">* required</Form.Text>\n          </Form>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Cancel\n          </Button>\n          <Button\n            variant=\"success\"\n            onClick={handleSubmit}\n            disabled={!handleFormValidation()}\n          >\n            Log Entry\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  };\n\n  const loader = () => {\n    return (\n      <div className=\"d-flex justify-content-center\">\n        <br />\n        <Spinner\n          as=\"span\"\n          animation=\"grow\"\n          style={{ width: '5em', height: '5rem' }}\n          role=\"status\"\n          aria-hidden=\"true\"\n          className=\"loader\"\n        />\n      </div>\n    );\n  };\n\n  const displayRating = (rating) => {\n    const starRatingArray = [];\n    for (let i = 0; i < rating; i++) {\n      starRatingArray.push(\n        <FontAwesomeIcon\n          key={i}\n          className=\"checked-star\"\n          icon=\"star\"\n        ></FontAwesomeIcon>\n      );\n    }\n    return starRatingArray;\n  };\n\n  const content = () => {\n    return (\n      <React.Fragment>\n        {showNewEntrySuccessMessage()}\n        {showNewEntryFailureMessage()}\n        <br></br>\n        {newEntryModal()}\n        <h3>Summary</h3>\n        <p>\n          In <b>{new Date().getFullYear()}</b> so far, <b>{user?.name}</b> has{' '}\n          <b>{user?.points}</b> points from <b>{numberEntries} </b>entries, the\n          highest rated entry is <b>{highestRated}</b>.\n        </p>\n        <div>\n          <Button variant=\"primary\" onClick={handleShow}>\n            Log New Entry\n          </Button>\n          <br />\n          <br />\n        </div>\n        <div>{entryItems}</div>\n      </React.Fragment>\n    );\n  };\n\n  const deleteEntry = async (id) => {\n    if (window.confirm('Are you sure you want to delete this entry?')) {\n      try {\n        fetch(`/api/entries/${id}`, {\n          method: 'DELETE',\n          headers: { token },\n        });\n        setLoading(true);\n\n        setTimeout(async () => {\n          await getUserEntries();\n          setLoading(false);\n        }, 100);\n      } catch (err) {\n        console.log(err);\n      }\n    } else {\n    }\n  };\n\n  const getUserEntries = async () => {\n    let entriesResponse;\n    try {\n      entriesResponse = await fetch(`/api/entries`, {\n        headers: { token },\n      });\n      let entriesData = await entriesResponse.json();\n      entriesData.entries = entriesData?.entries?.filter(\n        (entry) => entry?.year === new Date().getFullYear().toString()\n      );\n      setNumberEntries(entriesData?.entries?.length);\n      setHighestRated(\n        [...entriesData.entries]?.sort(\n          (a, b) => parseFloat(b?.rating) - parseFloat(a?.rating)\n        )[0]?.item?.name\n      );\n      await setEntryItems(\n        entriesData?.entries && entriesData?.entries.length ? (\n          <Table striped hover responsive=\"true\">\n            <thead>\n              <tr>\n                <th>#</th>\n                <th>Name</th>\n                <th>Category</th>\n                <th>Rating</th>\n                <th>Points</th>\n                <th>Year</th>\n                <th>Delete</th>\n              </tr>\n            </thead>\n            <tbody>\n              {entriesData?.entries\n                .sort((a, b) => a.date - b.date)\n                .map((entry, index) => {\n                  return (\n                    <tr key={entry._id}>\n                      <td>{index + 1}</td>\n                      <td>{entry.item.name}</td>\n                      <td>\n                        <FontAwesomeIcon\n                          icon={handleIcon(entry.item.itemCategory.name)}\n                        ></FontAwesomeIcon>{' '}\n                        {entry.item.itemCategory.name}\n                      </td>\n                      <td>{displayRating(entry.rating)}</td>\n                      <td>{entry.item.itemCategory.points}</td>\n                      <td>{entry.year}</td>\n                      <td>\n                        <FontAwesomeIcon\n                          className=\"delete-icon\"\n                          icon=\"trash\"\n                          onClick={() => deleteEntry(entry._id)}\n                        ></FontAwesomeIcon>\n                      </td>\n                    </tr>\n                  );\n                })\n                .reverse()}\n            </tbody>\n          </Table>\n        ) : (\n          <p>No entries logged yet!</p>\n        )\n      );\n    } catch (err) {\n      console.log(err);\n      handleLoggedOutUser();\n    }\n  };\n\n  useEffect(() => {\n    async function getEntries() {\n      getUserEntries();\n    }\n\n    async function getUser() {\n      let userResponse;\n      try {\n        userResponse = await fetch(`/api/users/current`, {\n          headers: { token },\n        });\n        const userData = await userResponse.json();\n        setUser(userData.user);\n      } catch (err) {\n        console.log(err);\n      }\n    }\n\n    async function getItemCategories() {\n      let itemCategoryResponse;\n      try {\n        itemCategoryResponse = await fetch(`/api/item-categories`, {\n          headers: { token },\n        });\n        itemCategoryResponse = await itemCategoryResponse.json();\n        setItemCategories(itemCategoryResponse.itemCategories);\n      } catch (err) {\n        console.log(err);\n      }\n    }\n    const getData = async () => {\n      setLoading(true);\n      await getItemCategories();\n      await getUser();\n      await getEntries();\n      setLoading(false);\n    };\n    getData();\n  }, [token]);\n\n  return (\n    <div className=\"entries\">\n      {handleLoggedOutUser()}\n      {loading ? loader() : content()}\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport axios from 'axios';\nimport store from '../store/store';\nimport { addToken, addLoginError } from '../actions/actions';\nimport { useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nexport const Login = (props) => {\n  const [name, setName] = useState('');\n  const [password, setPassword] = useState('');\n  const [loginError, setLoginError] = useState(false);\n  const [loginErrorMessage, setLoginErrorMessage] = useState('');\n\n  const handleSubmit = (event) => {\n    handleLogin();\n    event.preventDefault();\n  };\n\n  useSelector((state) => {\n    if (loginError !== state.loginError) {\n      setLoginError(state.loginError);\n    }\n  });\n\n  const handleLogin = async () => {\n    try {\n      const loginResponse = await fetch(`http://localhost:5000/auth/local`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          name: name,\n          password: password,\n        }),\n      });\n      const res = await loginResponse.json();\n      if (res) {\n        store.dispatch(addLoginError(false));\n        store.dispatch(addToken(res.token));\n        sessionStorage.setItem('token', res.token);\n        props.history.push('/entries');\n      }\n    } catch (error) {\n      console.log(error);\n      store.dispatch(addLoginError(true));\n      //setLoginErrorMessage(error.response.data.message);\n      setPassword('');\n    }\n  };\n\n  return (\n    <div className=\"login\">\n      <br></br>\n      <h3>Login</h3>\n      <form onSubmit={handleSubmit}>\n        <div className=\"form-group\">\n          <label htmlFor=\"name\">Name</label>\n          <input\n            type=\"name\"\n            className=\"form-control\"\n            id=\"name\"\n            aria-describedby=\"nameHelp\"\n            placeholder=\"Enter name\"\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n          />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type=\"password\"\n            className=\"form-control\"\n            id=\"password\"\n            placeholder=\"Password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n        </div>\n\n        <button\n          type=\"submit\"\n          className=\"btn btn-success\"\n          disabled={!name || !password}\n        >\n          Submit\n        </button>\n        {loginError ? (\n          <div className=\"text-danger\">\n            <br />\n            {loginErrorMessage}\n          </div>\n        ) : null}\n      </form>\n      <p>\n        <br></br>\n        <Link className=\"text-muted\" to=\"/register\">\n          Don't have an account yet?\n        </Link>\n      </p>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { Navbar, Nav, Image } from 'react-bootstrap';\nimport store from '../store/store';\nimport { useSelector } from 'react-redux';\nimport logo from '../scroll.png';\n\nexport const NavbarComponent = (props) => {\n  const [token, setToken] = useState(store.getState().token);\n\n  useSelector((state) => {\n    if (token !== state.token) {\n      setToken(state.token);\n    }\n  });\n\n  return (\n    <Navbar bg=\"primary\" variant=\"dark\" expand=\"md\">\n      <Navbar.Brand href=\"/\">\n        <Image\n          style={{ width: '1.5em', marginRight: '0.5em' }}\n          src={logo}\n          rounded\n        />\n        Entertainment Tracker\n      </Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n      <Navbar.Collapse id=\"basic-navbar-nav\">\n        <Nav className=\"mr-auto\">\n          {token ? (\n            <React.Fragment>\n              <Nav.Link href=\"/entries\">Entries</Nav.Link>\n              <Nav.Link href=\"/logout\">Logout</Nav.Link>\n            </React.Fragment>\n          ) : (\n            <React.Fragment>\n              <Nav.Link href=\"/login\">Login</Nav.Link>\n              <Nav.Link href=\"/register\">Register</Nav.Link>\n            </React.Fragment>\n          )}\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  );\n};\n","import React, { useEffect } from 'react';\nimport axios from 'axios';\nimport store from '../store/store';\nimport { addToken } from '../actions/actions';\n\nexport const Logout = (props) => {\n  const handleLogout = async () => {\n    try {\n      await axios.get(`/auth/logout`, {\n        headers: { token: store.getState().token },\n      });\n      sessionStorage.removeItem('token');\n      store.dispatch(addToken(null));\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  useEffect(() => {\n    const logout = async () => {\n      handleLogout();\n    };\n    logout();\n  }, []);\n  return <div> </div>;\n};\n","import React, { useState } from 'react';\nimport axios from 'axios';\nimport store from '../store/store';\nimport { addToken } from '../actions/actions';\nimport { Form, Button } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\nexport const Register = (props) => {\n  const [form, setForm] = useState({\n    name: '',\n    password: '',\n    retypePassword: '',\n  });\n\n  const [registerFailure, setRegisterFailure] = useState('');\n\n  const handleSubmit = (event) => {\n    handleRegister();\n    event.preventDefault();\n  };\n\n  const handleRegisterFormChange = (e) => {\n    let { name, value } = e.target;\n\n    let newEntry = { ...form };\n    if (name === 'name') {\n      newEntry.name = value;\n    } else if (name === 'password') {\n      newEntry.password = value;\n    } else if (name === 'retypePassword') {\n      newEntry.retypePassword = value;\n    }\n\n    setForm({ ...form, ...newEntry });\n  };\n\n  const showRegisterFailureMessage = () => {\n    return registerFailure ? (\n      <span className=\"text-danger\">\n        <br />\n        {registerFailure}\n      </span>\n    ) : null;\n  };\n\n  const formComplete = () => {\n    return (\n      form.name.trim().length > 0 &&\n      form.password.trim().length > 0 &&\n      form.retypePassword.trim().length &&\n      form.password === form.retypePassword\n    );\n  };\n\n  const handleLogin = async () => {\n    return axios\n      .post(`/auth/local`, {\n        name: form.name,\n        password: form.password,\n      })\n      .then((res) => {\n        if (res.data) {\n          store.dispatch(addToken(res.data.token));\n          sessionStorage.setItem('token', res.data.token);\n          setForm({\n            name: '',\n            password: '',\n            retypePassword: '',\n          });\n          props.history.push('/entries');\n        }\n      })\n      .catch((error) => {\n        setForm({\n          ...form,\n          password: '',\n          retypePassword: '',\n        });\n      });\n  };\n\n  const handleRegister = async () => {\n    axios\n      .post(`/api/users`, {\n        body: {\n          name: form.name,\n          password: form.password,\n        },\n      })\n      .then((res) => {\n        if (res.data) {\n          handleLogin();\n        }\n      })\n      .catch((error) => {\n        setRegisterFailure(error.response.data.message);\n        setForm({\n          name: '',\n          password: '',\n          retypePassword: '',\n        });\n      });\n  };\n\n  return (\n    <div className=\"register\">\n      <br></br>\n      <h3>Register</h3>\n      <Form>\n        <Form.Group controlId=\"registerName\">\n          <Form.Label>Name *</Form.Label>\n          <Form.Control\n            name=\"name\"\n            value={form.name}\n            type=\"text\"\n            placeholder=\"Enter a name for your account\"\n            onChange={handleRegisterFormChange}\n          />\n        </Form.Group>\n        <Form.Group controlId=\"registerPassword\">\n          <Form.Label>Password *</Form.Label>\n          <Form.Control\n            name=\"password\"\n            value={form.password}\n            type=\"password\"\n            placeholder=\"Enter a password for your account\"\n            onChange={handleRegisterFormChange}\n          />\n        </Form.Group>\n        <Form.Group controlId=\"registerRetypePassword\">\n          <Form.Label>Retype Password *</Form.Label>\n          <Form.Control\n            name=\"retypePassword\"\n            value={form.retypePassword}\n            type=\"password\"\n            placeholder=\"Retype the password for your account\"\n            onChange={handleRegisterFormChange}\n          />\n        </Form.Group>\n        <Button\n          onClick={handleSubmit}\n          variant=\"success\"\n          type=\"submit\"\n          disabled={!formComplete()}\n        >\n          Submit\n        </Button>\n        <Form.Text className=\"text-muted\">* required</Form.Text>\n        {showRegisterFailureMessage()}\n      </Form>\n      <p>\n        <br></br>\n        <Link className=\"text-muted\" to=\"/login\">\n          Already have an account?\n        </Link>\n      </p>\n    </div>\n  );\n};\n","import React from 'react';\nimport { BrowserRouter, Route, Redirect, Switch } from 'react-router-dom'\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport * as Icons from '@fortawesome/free-solid-svg-icons';\n\nimport './App.css';\nimport store from './store/store';\nimport { Entries } from './components/entries';\nimport { Login } from './components/login';\nimport { NavbarComponent } from './components/navbar';\nimport { Logout } from './components/logout';\nimport { addToken } from './actions/actions';\nimport { Register } from './components/register';\n\nconst iconList = Object\n  .keys(Icons)\n  .filter(key => key !== \"fas\" && key !== \"prefix\")\n  .map(icon => Icons[icon])\n\nlibrary.add(...iconList)\n\nconst App = () => {\n  const token = sessionStorage.getItem('token') !== \"undefined\" && sessionStorage.getItem('token') ? sessionStorage.getItem('token') : null\n  store.dispatch(addToken(token))\n\n  const redirectIndex = () => {\n    return token ? <Redirect to=\"/entries\" />\n      : null\n  }\n  const handleIndex = () => token ? <Entries> </Entries> : <Login></Login>\n\n  return (\n\n    <div className=\"App\">\n      <br></br>\n      <div className=\"container\">\n        <NavbarComponent ></NavbarComponent>\n        {redirectIndex()}\n        <Switch>\n          <Route exact path=\"/\" component={handleIndex} />\n\n          <Route exact path=\"/login\" component={Login} />\n          <Route exact path=\"/register\" component={Register} />\n          <Route exact path=\"/logout\" component={Logout} />\n          <Route exact path=\"/entries\" component={Entries} />\n        </Switch>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        checkValidServiceWorker(swUrl, config);\n\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n\n              console.log('Content is cached for offline use.');\n\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport store from './store/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/scroll.5660ca10.png\";"],"sourceRoot":""}